INSTRUCTIONS: 

Go to the labs and find the one for RNNs entitled "Applying RNNs/LSTMs to MNIST". You will be running a few experiments and will write a brief report about your results and the interpretation of your findings.

Here is what you need to do: you will vary the number of hidden units exponentially as follows, 16, 32, 64, 128, 256, 512, 1024, 2048, and 4096; you will also vary the learning rate exponentially as follows: 0.00001, 0.0001, 0.001, 0.01, 0.1, and 1.0. 

In the code of the specified lab, you some lines of code to display the overall test accuracy; you will change the following lines:

# Calculate accuracy for 128 mnist test images
test_len = 128
test_data = mnist.test.images[:test_len].reshape((-1, n_steps, n_input))
test_label = mnist.test.labels[:test_len]

to the following lines:

# Calculate accuracy for all mnist test images
test_data = mnist.test.images.reshape((-1, n_steps, n_input))
test_label = mnist.test.labels

 

In your report you will include a filled-out table like this:

Test accuracy
nerurons/learning rate	0.00001	0.0001	0.001	0.01	0.1	1.0
16	 	 	 	 	 	 
32	 	 	 	 	 	 
64	 	 	 	 	 	 
128	 	 	 	 	 	 
256	 	 	 	 	 	 
512	 	 	 	 	 	 
1024	 	 	 	 	 	 
2048	 	 	 	 	 	 
4096	 	 	 	 	 	 
You will discuss your results and interpret them; what is this telling you about the training of an LSTM with respect to the number of neurons or learning rate or both? What can you learn from this?

It would be really neat if you could produce a plot/graphic from the table where multiple every line represents a column in the table. Something like this.

Please bring a printed copy of the homework to class on Monday, Oct/23. 

Let me know if you have any questions.

- Dr. Rivas


